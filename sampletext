🔹 Slide 1: AI-Powered Operations Knowledge – Eliminating the Bottleneck

Script:
“Hi everyone — thanks for joining. Today I want to walk you through the work we’ve done on an AI-powered chatbot for operations knowledge, and how it’s helping eliminate delays during incidents by making critical information instantly accessible.

This is part of our broader initiative to apply GenAI meaningfully in technical operations — and this chatbot POC marks a key milestone toward that.”

⸻

🔹 Slide 2: The Problem We’re Solving

Script:
“We’ve all experienced the issue:
	•	Documentation is everywhere — Confluence, OneDrive, SharePoint — but not in one place.
	•	During incidents, we spend more time searching than solving.
	•	And SMEs aren’t always available when we need them.

Even when knowledge exists, it’s often buried or not in a consumable format. That’s the bottleneck we wanted to eliminate.”

⸻

🔹 Slide 3: How the Chatbot Helps Ops Teams

Script:
“Our GenAI-powered chatbot is built to directly address this challenge:
	•	You ask a question in natural language.
	•	It understands what you mean and returns specific answers from our runbooks and playbooks.
	•	It’s available 24x7, acting like a virtual SME.
	•	It works both via a Web UI and integrates with Microsoft Teams — so it meets people where they work.

This isn’t a generic LLM — it’s trained on our real documentation and optimized for our operational context.”

⸻

🔹 Slide 4: GenAI Strategy for FRFS Technical Operations

Script:
“This chatbot is our first successful POC — but it’s just the beginning.

We’re aligning with the broader GenAI strategy for technical operations, which includes:
	•	Assessment & Discovery: Finding more repetitive, high-friction tasks AI can support.
	•	Pilot Implementation: Expanding from the chatbot into other use cases like automated alert triage or remediation workflows.
	•	Scalable Integration: Building guardrails and frameworks to scale GenAI solutions responsibly across the enterprise.

Key use cases include:
	•	Intelligent monitoring
	•	Ops automation
	•	Capacity planning
	•	And most importantly — context-aware documentation access, where this chatbot is already delivering value.”


✅ Technical Demo Script – GenAI Chatbot for Operations

⸻

🔹 1. Introduction (Set the Context)

Say:
“Now I’ll give you a quick walkthrough of our GenAI chatbot in action.

This POC version is designed to assist production support and operations teams by retrieving context-specific guidance from internal runbooks and documentation — instantly, just by asking questions.”

⸻

🔹 2. Architecture Overview (optional quick visual or verbal walkthrough)

Say:
“Here’s how it works under the hood:
	•	A user sends a natural language query through the chatbot UI
	•	The query is semantically embedded using AWS Bedrock (Titan Embeddings)
	•	That vector is matched against our indexed content in OpenSearch
	•	The top relevant document snippets are retrieved
	•	We then prompt an LLM like Claude via Bedrock to generate a contextual response
	•	The final output is returned as a conversational answer

The backend is fully serverless — built using API Gateway, Lambda, Bedrock, and OpenSearch Serverless.”

⸻

🔹 3. Live Interaction – Example Prompt

Say:
“Let’s try a real-world example an ops team might ask.”

💬 Prompt in chatbot:
“What steps should I follow to restart the Kafka connector for the payments service?”

Wait for response, then explain:

Say:
“As you can see, the chatbot:
	•	Understood the context of Kafka connector
	•	Pulled the exact steps from our documented restart procedure
	•	And returned it in a clear, actionable format — no digging through Confluence needed.”

⸻

🔹 4. Follow-Up Query to Show Context Awareness

Say:
“Let’s now ask a follow-up to simulate a real incident scenario.”

💬 Follow-up Prompt:
“What logs should I check if the restart fails?”

Say:
“Notice how it retains the topic of the previous interaction — and suggests log locations and known failure patterns relevant to the payments connector.”

⸻

🔹 5. Troubleshooting/Runbook Example

Say:
“Let’s now try another operations use case — retrieving a troubleshooting guide.”

💬 Prompt:
“App XYZ is throwing 502 errors. How do I fix it?”

Say:
“The chatbot recognizes this as a known issue, fetches the relevant troubleshooting steps from the SOP, and even recommends what to verify first — like load balancer health checks or backend service status.”

⸻

🔹 6. Demo Wrap-Up: Transition to Next Phase

Say:
“This completes the core part of the demo.

As you’ve seen:
	•	The chatbot eliminates friction in accessing operational knowledge
	•	It provides context-aware, LLM-powered answers in seconds
	•	It’s already usable via web and soon Teams
	•	And this is just the beginning — we’re preparing for broader rollout with more content, deeper integrations, and new use cases like intelligent alert triage and auto-remediation.”

⸻

🔹 Optional – Invite Engagement

Say:
“If your team has runbooks or common issues that would benefit from this, we’d love to collaborate and include your use cases in the production rollout.”