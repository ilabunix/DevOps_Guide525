<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Ask Clara – A GenAI Assistant</title>
  <style>
    :root {
      --primary: #6d28d9;
      --primary-light: #a58cf6;
      --primary-dark: #4c1d95;
      --bot-bubble: #e0e7ff;
      --user-bubble: #dbeafe;
      --bg: #f8f9fa;
      --text: #1f2937;
      --card: #fff;
      --border: #e5e7eb;
    }

    [data-theme="dark"] {
      --bg: #111827;
      --text: #e5e7eb;
      --card: #1f2937;
      --border: #374151;
      --bot-bubble: #3b82f6;
      --user-bubble: #8b5cf6;
    }

    body {
      font-family: 'Segoe UI', sans-serif;
      background: var(--bg);
      color: var(--text);
      margin: 0;
      padding: 0;
    }

    .chat-container {
      max-width: 800px;
      margin: 2rem auto;
      background: var(--card);
      border: 1px solid var(--border);
      border-radius: 12px;
      box-shadow: 0 10px 20px rgba(0,0,0,0.05);
      overflow: hidden;
      display: flex;
      flex-direction: column;
      min-height: 90vh;
    }

    .chat-header {
      background: linear-gradient(90deg, #6d28d9, #9333ea);
      color: white;
      padding: 1rem 1.5rem;
      font-size: 1.2rem;
      font-weight: bold;
    }

    .chat-history {
      flex-grow: 1;
      overflow-y: auto;
      padding: 1rem;
    }

    .message {
      display: flex;
      margin-bottom: 1rem;
      animation: fadeIn 0.3s ease-in;
    }

    .message.bot {
      justify-content: flex-start;
    }

    .message.user {
      justify-content: flex-end;
    }

    .bubble {
      max-width: 70%;
      padding: 0.75rem 1rem;
      border-radius: 16px;
      font-size: 0.95rem;
      line-height: 1.4;
      box-shadow: 0 2px 6px rgba(0,0,0,0.1);
      transition: all 0.3s ease-in-out;
      white-space: pre-wrap;
    }

    .bubble.bot {
      background: var(--bot-bubble);
      color: #000;
      border-bottom-left-radius: 4px;
    }

    .bubble.user {
      background: var(--user-bubble);
      color: white;
      border-bottom-right-radius: 4px;
    }

    .input-container {
      display: flex;
      padding: 1rem;
      border-top: 1px solid var(--border);
      gap: 0.5rem;
      background: var(--card);
    }

    #query {
      flex-grow: 1;
      padding: 0.75rem;
      border: 1px solid var(--border);
      border-radius: 8px;
    }

    button {
      background: var(--primary);
      color: white;
      border: none;
      padding: 0.75rem 1.2rem;
      border-radius: 8px;
      cursor: pointer;
    }

    .toolbar {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 0.5rem 1rem;
      border-top: 1px solid var(--border);
      background: var(--card);
    }

    .toolbar button {
      font-size: 0.85rem;
      padding: 0.5rem 0.8rem;
      background: transparent;
      border: 1px solid var(--border);
      color: var(--text);
    }

    @keyframes fadeIn {
      from {opacity: 0; transform: translateY(8px);}
      to {opacity: 1; transform: translateY(0);}
    }

    .dark-mode-toggle {
      margin-left: auto;
      font-size: 0.85rem;
    }
  </style>
</head>

<body data-theme="light">
  <div class="chat-container">
    <div class="chat-header">
      Ask Clara – A GenAI Assistant for Smarter Operations
    </div>

    <div class="chat-history" id="chatHistory"></div>

    <div class="input-container">
      <input type="text" id="query" placeholder="Ask Clara..." />
      <button onclick="askBot()">Send</button>
    </div>

    <div class="toolbar">
      <button onclick="resetChat()">Reset Chat</button>
      <button onclick="downloadTranscript()">Download Chat</button>
      <label class="dark-mode-toggle">
        <input type="checkbox" id="themeToggle"> Dark Mode
      </label>
    </div>
  </div>

  <script>
    const queryInput = document.getElementById("query");
    const chatHistory = document.getElementById("chatHistory");
    const themeToggle = document.getElementById("themeToggle");

    async function askBot() {
      const query = queryInput.value.trim();
      if (!query) return;
      addMessage(query, "user");
      queryInput.value = "";

      const thinkingMsg = addMessage("Clara is thinking...", "bot");

      try {
        const res = await fetch("https://your-api-id.execute-api.us-west-2.amazonaws.com/prod/chatbot", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ query })
        });

        const responseText = await res.text();
        let data;

        try {
          data = JSON.parse(responseText);
        } catch {
          data = { answer: responseText };
        }

        thinkingMsg.remove();

        const answer = (data.answer || data.message || data.response || JSON.stringify(data)).toString();
        addMessage(answer, "bot");
      } catch (err) {
        thinkingMsg.remove();
        addMessage("⚠️ Error: " + err.message, "bot");
      }
    }

    function addMessage(text, sender) {
      const wrapper = document.createElement("div");
      wrapper.className = `message ${sender}`;

      const bubble = document.createElement("div");
      bubble.className = `bubble ${sender}`;
      bubble.textContent = text;

      wrapper.appendChild(bubble);
      chatHistory.appendChild(wrapper);
      chatHistory.scrollTop = chatHistory.scrollHeight;
      return wrapper;
    }

    function resetChat() {
      chatHistory.innerHTML = '';
    }

    function downloadTranscript() {
      const lines = Array.from(chatHistory.children).map(div =>
        `${div.classList.contains("user") ? "You" : "Clara"}: ${div.textContent.trim()}`
      ).join("\n");
      const blob = new Blob([lines], { type: "text/plain" });
      const url = URL.createObjectURL(blob);
      const a = document.createElement("a");
      a.href = url;
      a.download = "clara-chat.txt";
      a.click();
    }

    themeToggle.addEventListener("change", () => {
      document.body.setAttribute("data-theme", themeToggle.checked ? "dark" : "light");
    });

    queryInput.addEventListener("keypress", function (e) {
      if (e.key === "Enter") askBot();
    });
  </script>
</body>
</html>