rule {
  name      = "API Gateway 4XX - ${var.api_gateway_name}-${var.stage_name}"
  condition = "C"

  # Query block (A) - CloudWatch 4XXError
  data {
    ref_id = "A"
    relative_time_range {
      from = 300
      to   = 0
    }
    datasource_uid = var.cloudwatch_data_source_uid
    model = {
      datasource = {
        type = "cloudwatch"
        uid  = var.cloudwatch_data_source_uid
      }
      alias          = ""
      region         = var.region
      namespace      = "AWS/ApiGateway"
      metricName     = "4XXError"
      stat           = "Sum"
      period         = "60"
      dimensions = {
        ApiName = var.api_gateway_name
        Stage   = var.stage_name
      }
      queryType     = "timeSeriesQuery"
      intervalMs    = 1000
      maxDataPoints = 43200
      id            = "A"
    }
  }

  # Reduce block (B) - take last value from A
  data {
    ref_id         = "B"
    datasource_uid = "__expr__"
    model = {
      type       = "reduce"
      expression = "A"
      reducer = {
        type = "last"
      }
      conditions = []
    }
  }

  # Threshold block (C) - fire if B > threshold
  data {
    ref_id         = "C"
    datasource_uid = "__expr__"
    model = {
      type       = "threshold"
      expression = "B"
      evaluator = {
        type   = "gt"
        params = [var.api_gateway_4xx_threshold]
      }
      conditions = []
    }
  }

  condition       = "C"
  interval        = "60s"
  no_data_state   = "OK"
  exec_err_state  = "Alerting"

  annotations = {
    summary        = "High 4XX errors on API ${var.api_gateway_name}"
    runbook_url    = "https://confluence.yourdomain.net/runbooks/apigw-4xx-errors"
    __dashboardUid = var.api_gateway_dashboard_uid
    __panelId      = var.api_gateway_panel_id
  }

  labels = {
    severity = "high"
    email    = var.deploy_env
  }
}